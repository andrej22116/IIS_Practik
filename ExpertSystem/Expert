
;#####################################################################;
;#                                                                   #;
;#     GLOBALS   GLOBALS   GLOBALS   GLOBALS   GLOBALS   GLOBALS     #;
;#								     #;
;#####################################################################;

(defglobal ?*LAST_YEAR* = 2018)


;#####################################################################;
;#                                                                   #;
;#    GAMES    GAMES    GAMES    GAMES    GAMES    GAMES    GAMES    #;
;#								     #;
;#####################################################################;

(deftemplate Game
	(multislot Genre
		(cardinality 1 ?VARIABLE)
		(type SYMBOL)
		(default ?NONE)
	)
	(slot Name
		(type STRING)
		(default ?NONE)
	)
	(slot Manufacturer
		(type STRING)
		(default ?NONE)
	)
	(slot Year
		(type INTEGER)
		(range 1950 ?VARIABLE)
		(default-dynamic ?*LAST_YEAR*)
	)
	(multislot Platform
		(type SYMBOL)
		(default pc)
	)
	(multislot OS
		(type STRING)
		(default "NONE")
	)
	(slot Duration
		(type INTEGER)
		(range 0 ?VARIABLE)
		(default 0)
	)
	(multislot GameModes
		(type SYMBOL)
		(allowed-symbols singleplayer multiplayer)
		(default singleplayer)
	)
	(slot Rating
		(type NUMBER)
		(range 0 10)
		(default 0)
	)
	(slot Cost
		(type NUMBER)
		(range 0 ?VARIABLE)
		(default 0)
	)
	(slot MinimalAge
		(type INTEGER)
		(range 0 ?VARIABLE)
		(default 0)
	)
	(slot HasBlood
		(type SYMBOL)
		(allowed-symbols TRUE FALSE)
		(default FALSE)
	)
	(slot ForGender
		(type SYMBOL)
		(allowed-symbols male female all)
		(default all)
	)
	(slot Description)
)

(deffacts	Games
	(Game
		(Name "The Sims")
		(Genre simulator strategy)
		(Manufacturer "Maxis")
		(Year 2000)
		(Platform pc ps2 xbox gamecube)
		(OS "Windows" "Mac OS X" )
		(Duration 999999)
		(GameModes singleplayer)
		(Rating 9)
		(Cost 5)
	)
	(Game
		(Name "The Sims 2")
		(Genre simulator strategy)
		(Manufacturer "Maxis")
		(Year 2004)
		(Platform pc gameboyadvance gamecube macosx javame nintendods sp2 psp xbox)
		(OS "Windows" "Mac OS X" )
		(Duration 999999)
		(GameModes singleplayer)
		(Rating 9)
		(Cost 10)
	)
	(Game
		(Name "The Sims 3")
		(Genre simulator strategy)
		(Manufacturer "Maxis")
		(Year 2009)
		(Platform pc appleios xbox360 wii nintendods sp3 nintendo3ds android windowsphone java)
		(OS "Windows" "Mac OS X")
		(Duration 999999)
		(GameModes singleplayer)
		(Rating 9)
		(Cost 15)
	)
	(Game
		(Name "The Sims 4")
		(Genre simulator strategy)
		(Manufacturer "Maxis")
		(Year 2014)
		(Platform pc sp4 xboxone)
		(OS "Windows" "Mac OS X" )
		(Duration 999999)
		(GameModes singleplayer)
		(Rating 9)
		(Cost 20)
	)
	(Game
		(Name "Risen")
		(Genre rpg)
		(Manufacturer "Piranha Bytes")
		(Year 2009)
		(Platform pc xbox360)
		(OS "Windows")
		(Duration 40)
		(GameModes singleplayer)
		(Rating 9)
		(Cost 10)
	)
	(Game
		(Name "Risen 2")
		(Genre rpg)
		(Manufacturer "Piranha Bytes")
		(Year 2012)
		(Platform pc xbox360 sp3)
		(OS "Windows")
		(Duration 40)
		(GameModes singleplayer)
		(Rating 7)
		(Cost 10)
	)
	(Game
		(Name "Risen 3")
		(Genre rpg)
		(Manufacturer "Piranha Bytes")
		(Year 2014)
		(Platform pc xbox360 sp4)
		(OS "Windows")
		(Duration 40)
		(GameModes singleplayer)
		(Rating 6)
		(Cost 15)
	)
	(Game
		(Name "RAGE")
		(Genre shooter)
		(Manufacturer "id Software")
		(Year 2011)
		(Platform pc xbox360 sp3)
		(OS "Windows" "Mac OS X")
		(Duration 120)
		(GameModes singleplayer multiplayer)
		(Rating 6)
		(Cost 15)
	)
	(Game
		(Name "StarCraft")
		(Genre strategy)
		(Manufacturer "Blizzard Entertainment")
		(Year 1998)
		(Platform pc nintendo64)
		(OS "Windows" "Mac OS X")
		(Duration 40)
		(GameModes singleplayer multiplayer)
		(Rating 9)
		(Cost 15)
	)
	(Game
		(Name "StarCraft II: Wings of Liberty")
		(Genre strategy)
		(Manufacturer "Blizzard Entertainment")
		(Year 2010)
		(Platform pc)
		(OS "Windows" "Mac OS X")
		(Duration 50)
		(GameModes singleplayer multiplayer)
		(Rating 9)
		(Cost 30)
	)
)



;#####################################################################;
;#                                                                   #;
;#   FUNCTIONS        FUNCTIONS        FUNCTIONS        FUNCTIONS    #;
;#								     #;
;#####################################################################;

(deffunction askQuestion (?question $?allowed-values)
    (bind ?answer 0)
    (while TRUE
    do
        (printout t ?question)
        (bind ?answer (read))

        (if (lexemep ?answer)
        then
            (bind ?answer (lowcase ?answer))
        )
        (if (member ?answer ?allowed-values) then (break))
    )

    ?answer
)

(deffunction ask-YesNo (?question)
    (bind ?response (askQuestion ?question yes no y n))
    (if (or (eq ?response yes) (eq ?response y))
    then
        TRUE
    else
        FALSE
    )
)

(deffunction enterNumber (?message)
	(bind ?number 0)
	(while TRUE
	do
		(printout t ?message)
		(bind ?number (read))

		(if (integerp ?number) then (break))
	)

	?number
)




;#####################################################################;
;#                                                                   #;
;#    RULES    RULES    RULES    RULES    RULES    RULES    RULES    #;
;#                                                                   #;
;#####################################################################;

(defrule systemBanner "This is header on my simple expert system!"
    (declare (salience 15))
    =>
    (printout t crlf crlf)
    (printout t " +────────────────────────────────────────────────────────────────────────────+" crlf)
    (printout t " |       ────────           Computer games magazine           ────────        |" crlf)
    (printout t " | ╔══╦══╦╗  ╔╦═══╦╗╔╦════╦═══╦═══╗ ╔═══╦══╦╗  ╔╦═══╦══╗ ╔╗╔╗╔╦══╦═══╦╗ ╔══╗  |" crlf)
    (printout t " | ║╔═╣╔╗║║  ║║╔═╗║║║╠═╗╔═╣╔══╣╔═╗║ ║╔══╣╔╗║║  ║║╔══╣╔═╝ ║║║║║║╔╗║╔═╗║║ ║╔╗╚╗ |" crlf)
    (printout t " | ║║ ║║║║╚╗╔╝║╚═╝║║║║ ║║ ║╚══╣╚═╝║ ║║╔═╣╚╝║╚╗╔╝║╚══╣╚═╗ ║║║║║║║║║╚═╝║║ ║║╚╗║ |" crlf)
    (printout t " | ║║ ║║║║╔╗╔╗║╔══╣║║║ ║║ ║╔══╣╔╗╔╝ ║║╚╗║╔╗║╔╗╔╗║╔══╩═╗║ ║║║║║║║║║╔╗╔╣║ ║║ ║║ |" crlf)
    (printout t " | ║╚═╣╚╝║║╚╝║║║  ║╚╝║ ║║ ║╚══╣║║║  ║╚═╝║║║║║╚╝║║╚══╦═╝║ ║╚╝╚╝║╚╝║║║║║╚═╣╚═╝║ |" crlf)
    (printout t " | ╚══╩══╩╝  ╚╩╝  ╚══╝ ╚╝ ╚═══╩╝╚╝  ╚═══╩╝╚╩╝  ╚╩═══╩══╝ ╚═╝╚═╩══╩╝╚╝╚══╩═══╝ |" crlf)
    (printout t " | ~ ©Andrey Stseniayew simple expert system project ~ Me and Kate - friends! |" crlf)
    (printout t " +────────────────────────────────────────────────────────────────────────────+" crlf)
    (printout t crlf crlf)
)

;#### root questions

(defrule askAge "Ask user age!"
	(declare (salience 14))
	(not (UserAge ?))
	=>
	(assert (UserAge (enterNumber "Your age:> ")))
)

(defrule askGender "Ask user gender!"
	(declare (salience 13))
	(not (UserGender ?))
	=>
	(assert (UserGender (askQuestion "Your gender[male/female]:> " male female)))
)

(defrule askAfraidOfBlood "Ask user afraid of blood"
	(declare (salience 12))
	(not (UserAfraidOfBlood ?))
	=>
	(assert (UserAfraidOfBlood (ask-YesNo "Do yo afraid of blood in games or life?:> ")))
)

(defrule askPlatform "Ask user platform!"
	(declare (salience 11))
	(not (UserPlatform ?))
	=>
	(assert (UserPlatform (askQuestion "Your platform[pc/ps4/ps3/ps2/ps/xbox/xbox360/xboxone]:> " pc ps4 ps3 ps2 ps xbox xbox360 xboxone)))
)

(defrule askLikeGamesForAll_male
	(declare (salience 10))
	(UserGender male)
	(not (UserLikeGamesForAll ?))
	=>
	(assert (UserLikeGamesForAll (ask-YesNo "Do you like games for female?:> ")))
)

(defrule askLikeGamesForAll_female
	(declare (salience 10))
	(UserGender female)
	(not (UserLikeGamesForAll ?))
	=>
	(assert (UserLikeGamesForAll (ask-YesNo "Do you like games for male?:> ")))
)

(defrule askNeedMultiplayer
	(declare (salience 9))
	(not (UserNeedMultiplayer ?))
	=>
	(assert (UserNeedMultiplayer (ask-YesNo "Do you need in multiplayer on game?:> ")))
)

;####### Main asks

(defrule askCalmOrDynamic
	(not (UserLikeGameSpeed ?))
	(not (HasResult ?))
	=>
	(assert (UserLikeGameSpeed (askQuestion "Do you like calm or dynamic games?[calm/dynamic]:> " calm dynamic)))
)

(defrule askLikeThink
	(UserLikeGameSpeed calm)
	(not (HasResult ?))
	=>
	(if (ask-YesNo "Do you like think?:> ")
	then
		(assert (HasResult logickal))
	else
		(assert (UserNotLikeThink))
	)
)

(defrule askLikeWatch
	(UserNotLikeThink)
	(not (HasResult ?))
	=>
	(if (ask-YesNo "Do you like watch the game a lot off time ?:> ")
	then
		(assert (HasResult simulator))
	else
		(assert (HeartStone))
	)
)


(defrule askLikeBeScared
	(UserLikeGameSpeed dynamic)
	(not (HasResult ?))
	=>
	(if (ask-YesNo "Do you like to be scared?:> ")
	then
		(assert (HasResult horror))
	else
		(assert (UserNotLikeBeScared))
	)
)

(defrule askLikeFights
	(UserNotLikeBeScared)
	(not (HasResult ?))
	=>
	(assert (UserLikeFights (ask-YesNo "Do you like fights?:> ")))
)

(defrule askLikeCars
	(UserLikeFights FALSE)
	(not (HasResult ?))
	=>
	(if (ask-YesNo "Do you like cars?:> ")
	then
		(assert (HasResult race))
	else
		(assert (UserNotLikeCars))
	)
)

(defrule askLikeSport
	(UserNotLikeCars)
	(not (HasResult ?))
	=>
	(if (ask-YesNo "Do you like sport?:> ")
	then
		(assert (HasResult sport))
	else
		(assert (HasResult arcade))
	)
)

(defrule askFighterOrStrategist
	(UserLikeFights TRUE)
	(not (HasResult ?))
	=>
	(bind ?select (askQuestion "Do you are fighter or strategist?[fighter/strategist]:> " fighter strategist))
	(if (eq ?select strategist)
	then
		(assert (HasResult strategy))
	else
		(assert (UserIsFighter))
	)
)

(defrule askLikeGrindAndQuests
	(UserIsFighter)
	(not (HasResult ?))
	=>
	(if (ask-YesNo "Do you like grind and quests?:> ")
	then
		(assert (HasResult rpg))
	else
		(assert (HasResult shooter))
	)
)

(defrule ShowResult_head
	(declare (salience 10))
	(HasResult ?genre)
	=>
	(printout t crlf crlf crlf "You can play on the next " ?genre "-s:" crlf)
)

(defrule ShowResult_AHAHAHAHA
	(HeartStone)
	=>
	(printout t crlf crlf crlf "You can play on the hearth stone, AHAHAHAHAHA" crlf crlf)
)

(defrule ShowResult_Stupid
	(declare (salience -100))
	(not (HasResult ?))
	=>
	(printout t crlf crlf crlf "You can walk to your friends (if they are)..." crlf crlf)
)

(defrule ShowResult
	(HasResult ?resGenre)
	(UserAge ?userAge)
	(UserGender ?userGender)
	(UserPlatform ?userPlatform)
	(UserAfraidOfBlood ?userBlood)
	(UserNeedMultiplayer ?userNeedMultiplayer)
	(UserLikeGamesForAll ?userLikeGenderGames)

	(Game (Name ?gameName)
		(Genre $?gameGenres)
		(Manufacturer ?gameManufacturer)
		(Year ?gameYear)
		(OS $?gameOS)
		(Platform $?gamePlatforms)
		(GameModes $?gameModes)
		(Rating ?gameRating)
		(Cost ?gameCost)
		(MinimalAge ?gameMinimalAge)
		(ForGender ?gameForGender)
		(HasBlood ?gameHasBlood)
		(Description ?gameDescription)
	)
	(test
		(and
			(>= ?userAge ?gameMinimalAge)
			(member ?userPlatform ?gamePlatforms)
			(member ?resGenre ?gameGenres)
			(or
				(and
					?userNeedMultiplayer
					(member multiplayer ?gameModes)
				)
				(not ?userNeedMultiplayer)
			)
			(or
				(eq ?gameForGender all)
				(eq ?userGender ?gameForGender)
				?userLikeGenderGames
			)
			(or
				(and
					?userBlood
					(not ?gameHasBlood)
				)
				(not ?userBlood)
			)
		)
	)
	=>
	(printout t "Game: " ?gameName crlf
		"          " "Manufacturer: " ?gameManufacturer crlf
		"          " "Year: " ?gameYear crlf
		"          " "OS: " ?gameOS crlf
		"          " "Game modes: " ?gameModes crlf
		"          " "Rating: " ?gameRating crlf
		"          " "Cost: " ?gameCost crlf
		"          " "Description: " ?gameDescription crlf
		"-------------------------------------------------------------------" crlf
	)
)
